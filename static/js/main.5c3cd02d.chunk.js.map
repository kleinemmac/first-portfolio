{"version":3,"sources":["app.module.scss","components/project-card/project-card.module.scss","components/project-card/project-card.js","assets/img/builder1.jpg","assets/img/pokefacts.jpg","assets/img/faceborkhome.jpg","assets/img/deckbuilder-project/mtghome.jpg","assets/img/deckbuilder-project/vue-tour.jpg","assets/img/pokefacts-project/poke-home.jpg","assets/img/pokefacts-project/poke-search.jpg","assets/img/pokefacts-project/poke-items.jpg","assets/img/facebork-project/dograted.jpg","constants/project-config.js","assets/img/facebork-project/error.jpg","app.js","reportWebVitals.js","index.js"],"names":["module","exports","ProjectCard","props","useState","open","setOpen","handleDialogOpen","project","handleDialogClose","Fragment","Dialog","fullScreen","onClose","aria-labelledby","className","styles","projectDialog","dialogContentWrapper","DialogContent","content","Grid","container","stickyBack","item","xs","backWrapper","Button","closeDialogIcon","onClick","endIcon","projectIntro","md","title","technology","summary","projectImages","map","slide","info","spacing","lg","caption","src","url","projectImg","alt","videoContainer","videoGridItem","width","height","video","frameborder","allow","allowfullscreen","Card","card","CardActionArea","CardMedia","image","cardImg","CardContent","Typography","gutterBottom","variant","component","projectTitle","color","blurb","CardActions","Hidden","lgUp","IconButton","aria-label","href","sourceCode","target","rel","mdDown","size","viewProject","projects","DeckBuilder","altText","MTGHome","VueTour","PokeFacts","PokeHome","PokeSearch","PokeItems","FaceborkHome","DogRated","App","menuOpen","setMenuOpen","Drawer","anchor","classes","paper","menuContent","Box","textAlign","menuCloseBtn","fontSize","pt","app","smooth","header","justify","alignItems","navbarContent","menuIcon","fonstSize","intro","introContent","hireMe","competencies","id","portfolio","cardContainer","about","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4FACAA,EAAOC,QAAU,CAAC,IAAM,iBAAiB,OAAS,oBAAoB,SAAW,sBAAsB,cAAgB,2BAA2B,MAAQ,mBAAmB,aAAe,0BAA0B,OAAS,oBAAoB,aAAe,0BAA0B,UAAY,uBAAuB,cAAgB,2BAA2B,MAAQ,mBAAmB,gBAAkB,6BAA6B,YAAc,2B,uCCAlcD,EAAOC,QAAU,CAAC,KAAO,2BAA2B,QAAU,8BAA8B,aAAe,mCAAmC,MAAQ,4BAA4B,YAAc,kCAAkC,cAAgB,oCAAoC,qBAAuB,2CAA2C,QAAU,8BAA8B,WAAa,iCAAiC,YAAc,kCAAkC,gBAAkB,sCAAsC,aAAe,mCAAmC,KAAO,2BAA2B,WAAa,iCAAiC,QAAU,8BAA8B,eAAiB,qCAAqC,cAAgB,oCAAoC,MAAQ,8B,2ZCyHnyBC,MAjHf,SAAqBC,GAAQ,IAAD,EACAC,oBAAS,GADT,mBACjBC,EADiB,KACXC,EADW,KAGlBC,EAAmB,SAACC,GACtBF,GAAQ,IAGNG,EAAoB,WACtBH,GAAQ,IAGZ,OACI,eAAC,IAAMI,SAAP,WACI,cAACC,EAAA,EAAD,CACIN,KAAMA,EACNO,YAAU,EACVC,QAASJ,EACTK,kBAAgB,6BAChBC,UAAWC,IAAOC,cALtB,SAMI,cAAC,IAAMP,SAAP,UACI,qBAAKK,UAAWC,IAAOE,qBAAvB,SACI,eAACC,EAAA,EAAD,CAAeJ,UAAWC,IAAOI,QAAjC,UACI,cAACC,EAAA,EAAD,CAAMC,WAAS,EAACP,UAAWC,IAAOO,WAAlC,SACI,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIV,UAAWC,IAAOU,YAArC,SACI,cAACC,EAAA,EAAD,CACIZ,UAAWC,IAAOY,gBAClBC,QAASpB,EACTqB,QAAS,cAAC,IAAD,IAHb,sBASR,cAACT,EAAA,EAAD,CAAMC,WAAS,EAACP,UAAWC,IAAOe,aAAlC,SACI,eAACV,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIO,GAAI,EAAvB,UACI,6BAAK7B,EAAMK,QAAQyB,QACnB,6BAAK9B,EAAMK,QAAQ0B,aACnB,4BAAI/B,EAAMK,QAAQ2B,eAGxBhC,EAAMK,QAAQ4B,cAAcC,KAAI,SAAAC,GAC9B,OACI,cAAC,IAAM5B,SAAP,UACQ,eAACW,EAAA,EAAD,CAAMC,WAAS,EAACP,UAAWC,IAAOuB,KAAMC,QAAS,EAAjD,UACI,cAACnB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIgB,GAAI,EAAG1B,UAAWC,IAAO0B,QAA5C,SACI,4BAAIJ,EAAMI,YAEd,cAACrB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIgB,GAAI,EAAvB,SACI,qBACIE,IAAKL,EAAMM,IACX7B,UAAWC,IAAO6B,WAClBC,IAAKR,EAAMI,gBATVJ,EAAMM,QAiBlC,eAACvB,EAAA,EAAD,CAAMC,WAAS,EAACP,UAAWC,IAAO+B,eAAlC,UACI,cAAC1B,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACG,uDAEJ,cAACJ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIV,UAAWC,IAAOgC,cAArC,SACI,wBAAQC,MAAM,MAAMC,OAAO,MAAMjB,MAAM,eAAeU,IAAKxC,EAAMK,QAAQ2C,MAAOpC,UAAWC,IAAOmC,MAAOC,YAAY,IAAIC,MAAM,2FAA2FC,iBAAe,kBAOjQ,eAACC,EAAA,EAAD,CAAMxC,UAAWC,IAAOwC,KAAxB,UACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CACIC,MAAOxD,EAAMK,QAAQmD,MACrB5C,UAAWC,IAAO4C,QAClB/B,QAAStB,IAEb,eAACsD,EAAA,EAAD,CAAahC,QAAStB,EAAtB,UACI,cAACuD,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,KAAKlD,UAAWC,IAAOkD,aAAvE,SACK/D,EAAMK,QAAQyB,QAEnB,cAAC6B,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,YAAYC,UAAU,KAAKlD,UAAWC,IAAOkD,aAA9E,SACK/D,EAAMK,QAAQ0B,aAEnB,cAAC4B,EAAA,EAAD,CAAYE,QAAQ,QAAQG,MAAM,gBAAgBF,UAAU,IAAIlD,UAAWC,IAAOoD,MAAlF,SACKjE,EAAMK,QAAQ4D,cAI3B,eAACC,EAAA,EAAD,WACI,eAACC,EAAA,EAAD,CAAQC,MAAI,EAAZ,UACI,cAACC,EAAA,EAAD,CAAYC,aAAW,eAAe5C,QAAStB,EAA/C,SACI,cAAC,IAAD,MAEJ,cAACiE,EAAA,EAAD,CAAYC,aAAW,6BAA6BC,KAAMvE,EAAMK,QAAQmE,WAAYC,OAAO,SAASC,IAAI,sBAAxG,SACI,cAAC,IAAD,SAGR,eAACP,EAAA,EAAD,CAAQQ,QAAM,EAAd,UACI,cAACnD,EAAA,EAAD,CAAQoD,KAAK,QAAQhE,UAAWC,IAAOgE,YAAanD,QAAStB,EAA7D,sBAGA,cAACoB,EAAA,EAAD,CAAQoD,KAAK,QAAQhE,UAAWC,IAAOgE,YAAaN,KAAMvE,EAAMK,QAAQmE,WAAYC,OAAO,SAASC,IAAI,sBAAxG,sCChHT,MAA0B,qCCA1B,MAA0B,sCCA1B,MAA0B,yCCA1B,MAA0B,oCCA1B,MAA0B,qCCA1B,MAA0B,sCCA1B,MAA0B,wCCA1B,MAA0B,uCCA1B,OAA0B,qCCW5BI,GAAW,CACpB,CACEhD,MAAO,mBACP0B,MAAOuB,EACPhD,WAAY,sCACZkC,MAAO,8GACPO,WAAY,2CACZxC,QAAS,6XACTC,cACE,CACE,CACE+C,QAAS,gDACTvC,IAAKwC,EACL1C,QAAS,8WAEX,CACEyC,QAAS,yBACTvC,IAAKsC,EACLxC,QAAS,q2BAEX,CACEyC,QAAS,kCACTvC,IAAKyC,EACL3C,QAAS,mVAGfS,MAAO,6CAET,CACElB,MAAO,eACP0B,MAAO2B,EACPpD,WAAY,sCACZkC,MAAO,0EACPO,WAAY,0CACZxC,QAAS,0WACTC,cACE,CACE,CACE+C,QAAS,wCACTvC,IAAK2C,EACL7C,QAAS,+RAEX,CACEyC,QAAS,kEACTvC,IAAK4C,EACL9C,QAAS,iLAEX,CACEyC,QAAS,yCACTvC,IAAK6C,EACL/C,QAAS,sKAGbS,MAAO,6CAEX,CACElB,MAAO,WACP0B,MAAO+B,EACPxD,WAAY,mCACZkC,MAAO,oGACPO,WAAY,yCACZxC,QAAS,qfACTC,cACE,CACE,CACE+C,QAAS,yEACTvC,IAAK8C,EACLhD,QAAS,uLAEX,CACEyC,QAAS,kEACTvC,IClFG,IAA0B,kCDmF7BF,QAAS,+VAEX,CACEyC,QAAS,oDACTvC,IAAK+C,GACLjD,QAAS,+QAGbS,MAAO,8C,oBEiFAyC,OA5Jf,WAAgB,IAAD,EACmBxF,oBAAS,GAD5B,mBACNyF,EADM,KACIC,EADJ,KAGb,OACE,eAAC,IAAMpF,SAAP,WACE,cAACqF,EAAA,EAAD,CAAQC,OAAO,QAAQ3F,KAAMwF,EAAUhF,QAAS,kBAAMiF,GAAY,IAAQG,QAAS,CAAEC,MAAOlF,IAAOmF,aAAnG,SACE,cAAC9E,EAAA,EAAD,CAAMC,WAAS,EAAf,SACE,eAACD,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,UACE,cAAC2E,EAAA,EAAD,CAAKC,UAAU,QAAf,SACE,cAAC7B,EAAA,EAAD,CAAYC,aAAW,kBAAkB5C,QAAS,kBAAMiE,GAAY,IAAQ/E,UAAWC,IAAOsF,aAA9F,SACE,cAAC,IAAD,CAAWC,SAAS,cAGxB,cAACH,EAAA,EAAD,CAAKC,UAAU,SAASG,GAAI,EAA5B,SACE,8BACE,+BACE,6BAAI,mBAAG9B,KAAK,gBAAR,4BACJ,6BAAI,mBAAGA,KAAK,aAAR,yBACJ,6BAAI,mBAAGA,KAAK,SAAR,mCAOhB,sBAAK3D,UAAS,2BAAsBC,IAAOyF,KAA3C,UACE,cAAC,KAAD,CAAaC,QAAM,EAACvC,MAAM,UAC1B,eAAC9C,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACE,wBAAQV,UAAWC,IAAO2F,OAA1B,SACE,eAACtF,EAAA,EAAD,CAAMC,WAAS,EAACsF,QAAQ,gBAAgBC,WAAW,SAAnD,UACE,cAACxF,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,sCAEF,cAAC8C,EAAA,EAAD,CAAQQ,QAAM,EAAd,SACE,cAACzD,EAAA,EAAD,CAAMG,MAAI,EAACT,UAAWC,IAAO8F,cAA7B,SACE,8BACE,+BACE,6BAAI,mBAAGpC,KAAK,gBAAR,4BACJ,6BAAI,mBAAGA,KAAK,aAAR,yBACJ,6BAAI,mBAAGA,KAAK,SAAR,8BAKZ,cAACJ,EAAA,EAAD,CAAQC,MAAI,EAAZ,SACE,cAAClD,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAACgD,EAAA,EAAD,CAAYC,aAAW,OAAO1D,UAAWC,IAAO+F,SAAUlF,QAAS,kBAAMiE,GAAY,IAArF,SACE,cAAC,IAAD,CAAUkB,UAAU,uBAOhC,cAAC3F,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIV,UAAWC,IAAOiG,MAArC,SACE,sBAAKlG,UAAWC,IAAOkG,aAAvB,UACE,4CACA,iEACA,eAAC7F,EAAA,EAAD,CAAMC,WAAS,EAACsF,QAAQ,SAASC,WAAW,SAA5C,UACE,cAACxF,EAAA,EAAD,CAAMG,MAAI,EAACT,UAAWC,IAAOmG,OAA7B,SACI,mBAAGzC,KAAK,mCAAmCE,OAAO,SAASC,IAAI,sBAA/D,SAAqF,cAAC,IAAD,QAEzF,cAACxD,EAAA,EAAD,CAAMG,MAAI,EAACT,UAAWC,IAAOmG,OAA7B,SACE,mBAAGzC,KAAK,iDAAiDE,OAAO,SAASC,IAAI,sBAA7E,SAAmG,cAAC,IAAD,gBAK3G,eAACxD,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIV,UAAWC,IAAOoG,aAAcC,GAAG,eAAtD,UACE,8CACA,eAAChG,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,eAACD,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIO,GAAI,EAAvB,UACE,cAAC,IAAD,IACA,oDACA,+BACE,uDACA,oDACA,oDACA,8CACA,6DACA,iEAGJ,eAACX,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIO,GAAI,EAAvB,UACE,cAAC,IAAD,IACA,uDACA,+BACE,sCACA,qCACA,sCACA,uDAGJ,eAACX,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIO,GAAI,EAAvB,UACE,cAAC,IAAD,IACA,0DACA,+BACE,4DACA,uDACA,wCACA,qDACA,iDAGJ,eAACX,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIO,GAAI,EAAvB,UACE,cAAC,IAAD,IACA,6CACA,+BACE,+CACA,8CACA,4CACA,yCACA,4CACA,mDACA,0DAKR,eAACX,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIV,UAAWC,IAAOsG,UAAWD,GAAG,YAAnD,UACE,2CACA,cAAChG,EAAA,EAAD,CAAMC,WAAS,EAACsF,QAAQ,SAASpE,QAAS,EAAGzB,UAAWC,IAAOuG,cAA/D,SACItC,GAAS5C,KAAI,SAAA7B,GACX,OACE,cAACa,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIO,GAAI,EAAGS,GAAI,EAA9B,SACE,cAAC,EAAD,CAAajC,QAASA,KADcA,EAAQyB,eAQxD,eAACZ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIV,UAAWC,IAAOwG,MAAOH,GAAG,QAA/C,UACE,0CACA,2XAKA,iWAKA,2OCrJGI,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.5c3cd02d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"app_app__3mk8F\",\"header\":\"app_header__2g4Pw\",\"menuIcon\":\"app_menuIcon__18kLA\",\"navbarContent\":\"app_navbarContent__Co8up\",\"intro\":\"app_intro__XBhk8\",\"introContent\":\"app_introContent__23GF4\",\"hireMe\":\"app_hireMe__FkHo4\",\"competencies\":\"app_competencies__20927\",\"portfolio\":\"app_portfolio__2cew8\",\"cardContainer\":\"app_cardContainer__1vHlO\",\"about\":\"app_about__2vgQh\",\"closeDialogIcon\":\"app_closeDialogIcon__uML2q\",\"menuContent\":\"app_menuContent__y1ZoX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"project-card_card__3KdjV\",\"cardImg\":\"project-card_cardImg__1UAZL\",\"projectTitle\":\"project-card_projectTitle__1bR12\",\"blurb\":\"project-card_blurb__1BHOh\",\"viewProject\":\"project-card_viewProject__3KmPw\",\"projectDialog\":\"project-card_projectDialog__2UjW2\",\"dialogContentWrapper\":\"project-card_dialogContentWrapper__2FByR\",\"content\":\"project-card_content__2zvWu\",\"stickyBack\":\"project-card_stickyBack__2ZygN\",\"backWrapper\":\"project-card_backWrapper__LosFB\",\"closeDialogIcon\":\"project-card_closeDialogIcon__1--XP\",\"projectIntro\":\"project-card_projectIntro__i58eU\",\"info\":\"project-card_info__1QufU\",\"projectImg\":\"project-card_projectImg__PZEVz\",\"caption\":\"project-card_caption__2mm70\",\"videoContainer\":\"project-card_videoContainer__2qYfe\",\"videoGridItem\":\"project-card_videoGridItem__1Wy-0\",\"video\":\"project-card_video__2Uqcv\"};","import React, { useState } from 'react';\nimport { Card, CardActionArea, CardMedia, CardContent, \n    Typography, CardActions, Button, Dialog, DialogContent, \n    IconButton, Grid, Hidden } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport styles from '../project-card/project-card.module.scss';\nimport CodeIcon from '@material-ui/icons/Code';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\n\nfunction ProjectCard(props) {\n    const [open, setOpen] = useState(false);\n\n    const handleDialogOpen = (project) => {\n        setOpen(true);\n    }\n\n    const handleDialogClose = () => {\n        setOpen(false);\n    }\n\n    return (\n        <React.Fragment>\n            <Dialog\n                open={open}\n                fullScreen \n                onClose={handleDialogClose} \n                aria-labelledby=\"Project Images and Details\" \n                className={styles.projectDialog}>\n                <React.Fragment>\n                    <div className={styles.dialogContentWrapper}>\n                        <DialogContent className={styles.content}>\n                            <Grid container className={styles.stickyBack}>\n                                <Grid item xs={12} className={styles.backWrapper}>\n                                    <Button \n                                        className={styles.closeDialogIcon} \n                                        onClick={handleDialogClose}\n                                        endIcon={<CloseIcon />}\n                                    >\n                                        Back\n                                    </Button>\n                                </Grid>\n                            </Grid>\n                            <Grid container className={styles.projectIntro}>\n                                <Grid item xs={12} md={6}>\n                                    <h1>{props.project.title}</h1>\n                                    <h3>{props.project.technology}</h3>\n                                    <p>{props.project.summary}</p>\n                                </Grid>\n                            </Grid>\n                            { props.project.projectImages.map(slide => {\n                                return (\n                                    <React.Fragment key={slide.url}>\n                                            <Grid container className={styles.info} spacing={2}>\n                                                <Grid item xs={12} lg={7} className={styles.caption}>\n                                                    <p>{slide.caption}</p>\n                                                </Grid>\n                                                <Grid item xs={12} lg={5}>\n                                                    <img\n                                                        src={slide.url}\n                                                        className={styles.projectImg}\n                                                        alt={slide.caption}\n                                                    />\n                                                </Grid>\n                                            </Grid>\n                                    </React.Fragment>\n                                )\n                            })  \n                            }\n                             <Grid container className={styles.videoContainer}>\n                                 <Grid item xs={12}>\n                                    <h2>Video Demonstration</h2>\n                                 </Grid>\n                                <Grid item xs={12} className={styles.videoGridItem}>\n                                    <iframe width=\"800\" height=\"400\" title=\"Product Tour\" src={props.project.video} className={styles.video} frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n                                </Grid>\n                            </Grid>\n                        </DialogContent>\n                    </div>\n                </React.Fragment> \n            </Dialog>\n            <Card className={styles.card}>\n                <CardActionArea>\n                    <CardMedia\n                        image={props.project.image}\n                        className={styles.cardImg}\n                        onClick={handleDialogOpen}\n                    />\n                    <CardContent onClick={handleDialogOpen}>\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\" className={styles.projectTitle}>\n                            {props.project.title}\n                        </Typography>\n                        <Typography gutterBottom variant=\"subtitle1\" component=\"h2\" className={styles.projectTitle}>\n                            {props.project.technology}\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" className={styles.blurb}>\n                            {props.project.blurb}\n                        </Typography>\n                    </CardContent>\n                </CardActionArea>\n                <CardActions>\n                    <Hidden lgUp>\n                        <IconButton aria-label=\"view project\" onClick={handleDialogOpen}>\n                            <VisibilityIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"view source code on Github\" href={props.project.sourceCode} target=\"_blank\" rel=\"noreferrer noopener\">\n                            <CodeIcon />\n                        </IconButton>\n                    </Hidden>\n                    <Hidden mdDown>\n                        <Button size=\"small\" className={styles.viewProject} onClick={handleDialogOpen}>\n                            See More\n                        </Button>\n                        <Button size=\"small\" className={styles.viewProject} href={props.project.sourceCode} target=\"_blank\" rel=\"noreferrer noopener\">\n                            Source Code\n                        </Button>\n                    </Hidden>\n                </CardActions>\n            </Card>\n        </React.Fragment>\n    );\n}\n\nexport default ProjectCard;","export default __webpack_public_path__ + \"static/media/builder1.bfc9c823.jpg\";","export default __webpack_public_path__ + \"static/media/pokefacts.5a6f3279.jpg\";","export default __webpack_public_path__ + \"static/media/faceborkhome.64a382c4.jpg\";","export default __webpack_public_path__ + \"static/media/mtghome.e4b341d3.jpg\";","export default __webpack_public_path__ + \"static/media/vue-tour.48e817bd.jpg\";","export default __webpack_public_path__ + \"static/media/poke-home.56aa4572.jpg\";","export default __webpack_public_path__ + \"static/media/poke-search.d769f471.jpg\";","export default __webpack_public_path__ + \"static/media/poke-items.0528da12.jpg\";","export default __webpack_public_path__ + \"static/media/dograted.3aa7220e.jpg\";","import DeckBuilder from '../assets/img/builder1.jpg';\nimport PokeFacts from '../assets/img/pokefacts.jpg';\nimport FaceborkHome from '../assets/img/faceborkhome.jpg';\nimport MTGHome from '../assets/img/deckbuilder-project/mtghome.jpg';\nimport VueTour from '../assets/img/deckbuilder-project/vue-tour.jpg';\nimport PokeHome from '../assets/img/pokefacts-project/poke-home.jpg';\nimport PokeSearch from '../assets/img/pokefacts-project/poke-search.jpg';\nimport PokeItems from '../assets/img/pokefacts-project/poke-items.jpg';\nimport DogRated from '../assets/img/facebork-project/dograted.jpg';\nimport DogError from '../assets/img/facebork-project/error.jpg';\n\nexport const projects = [\n    { \n      title: 'MTG Deck Builder',\n      image: DeckBuilder,\n      technology: 'VueJS | Vue Router | Vuex | Vuetify',\n      blurb: 'An application for building, editing, and exporting card decks using the official Magic: The Gathering API.',\n      sourceCode: 'https://github.com/kleinemmac/deck-picks',\n      summary: 'MTG Deck Builder is a client-side, single-page, desktop web application by which a user can search for cards, build and edit a deck, and export it for later reference - all utilizing the MTG Card API. When I built this project, I did not have experience with backend development so I relied on IndexedDB to load and save state so that users could access their saved decks later.',\n      projectImages: \n        [\n          {\n            altText: 'home page of Deck Builder desktop application',\n            url: MTGHome,\n            caption: 'The user begins with the option to edit an existing deck or create a new deck. Other options on existing decks include delete and export. The purple drawer to the right is a simple FAQ with guidelines and resources for building good Magic: The Gathering decks. The help icon at the top right triggers a vue-tour that explains the available options on the screen.'\n          },\n          {\n            altText: 'create new deck option',\n            url: DeckBuilder,\n            caption: 'In this image, the user creates a new deck. Similar to the home page, the help icon at the top right triggers a vue-tour with specific guidelines for each available function. Filters at the top left allow the user to specify what legality, mana cost, color, and/or rarity they prefer. The user enters keywords into the search bar and an asynchronous search turns up sometimes thousands of results. These results are paginated so that they are easy to navigate. When a user selects one of the search results, it is displayed in the middle column with all of the vital information below it. The user can add the card using the purple + icon; they are able to delete a card from the deck by selecting the x icon next to it in the right column. Once the user exits this screen, their deck will be saved inside their browser unless they choose to delete all stored data.'\n          },\n          {\n            altText: 'home page with vue-tour visible',\n            url: VueTour,\n            caption: 'I implemented a dark mode, minimalist design with a focus on functionality, simplicity, and clarity. I relied on intuitive icons, buttons, and controls to help the user navigate the application successfully. To cover any gaps in user experience and interaction, I provided thorough information via easily accessible and concise tours.'\n          }\n        ],\n      video: 'https://www.youtube.com/embed/Z4W-YizJ0TU'\n    },\n    { \n      title: 'PokéFacts',\n      image: PokeFacts,\n      technology: 'VueJS | Vue Router | Vuex | Vuetify',\n      blurb: 'A client-side web application for exploring parts of the PokéApi v2.',\n      sourceCode: 'https://github.com/kleinemmac/pokefacts',\n      summary: 'PokéFacts is a responsive, client-side, single-page web application for exploring parts of the PokéApi v2. To prepare for this project, I created hand-drawn, low fidelity wireframes and high fidelity prototypes for mobile, tablet, and desktop screen sizes using Adobe XD. PokéFacts relies on Vuex for global store/state management and error handling.',\n      projectImages: \n        [\n          {\n            altText: 'home page of PokéFacts application',\n            url: PokeHome,\n            caption: 'In terms of design, I contrasted the whimsical Pokémon font styles with a minimalist and functional UX/UI approach. The clear and concise instructions, in combination with the global, collapsible navigation bar, enable the user to start searching for specific information quickly.'\n          },\n          {\n            altText: 'search results from Pokémon Search displaying two Pokémon',\n            url: PokeSearch,\n            caption: 'The Pokémon search bar populates a list of results. When the user selects a Pokémon name, the appropriate sprite with a link to more comprehensive information appears.'\n          },\n          {\n            altText: 'detailed results for a Pokémon item',\n            url: PokeItems,\n            caption: 'Each of the four main search options functions this way except each comprehensive information section is customized according to the data available from the API.'\n          }\n        ],\n        video: 'https://www.youtube.com/embed/VIr0jz8cVtU'\n    },\n    { \n      title: 'Facebork',\n      image: FaceborkHome,\n      technology: 'VueJS | Vuetify | ML5/TensorFlow',\n      blurb: 'A web application that relies on AI/ML to identify and rate an image of a dog uploaded by a user.',\n      sourceCode: 'https://github.com/kleinemmac/facebork',\n      summary: 'Facebork is a desktop web application that relies on AI/ML to provide a rating for an uploaded image with a satisfactory confidence score. Despite this being my first project, I wanted to start with something ambitious and different, so AI/ML seemed like a promising direction. The model I originally selected ended up not being a good fit due to it attempting to identify a large list of elements in a given image. Eventually, I found a good fit with a model that identifies dogs and their breeds.',\n      projectImages: \n        [\n          {\n            altText: 'home page of FaceBork application with image uploader and animated dog',\n            url: FaceborkHome,\n            caption: 'The user is prompted to drag & drop an image or click to browse files in order to upload a picture of their dog to receive a rating. Walking Dog bounces with gleeful anticipation.'\n          },\n          {\n            altText: 'error dialog that displays if confidence score is not satisfied',\n            url: DogError,\n            caption: 'File validation prevents the user from uploading a file that is too large and instructs them to try another file. If the image fails to meet the confidence threshold, it prompts the user to try uploading a picture that actually contains a dog. If the file passes size validation and satisfies the confidence score, Walking Dog is ready for action.'\n          },\n          {\n            altText: 'rated dog image with option to rate another image',\n            url: DogRated,\n            caption: 'Upon acceptance of the image, Walking Dog trots across the screen, exits stage right, and re-enters, prepared for his next mission. The user receives a rating for their dog and is prompted to upload another picture. Walking Dog is a CSS animation by David Khourshid.'\n          }\n        ],\n        video: 'https://www.youtube.com/embed/OVaFZEqU0bs'\n    }\n  ]","export default __webpack_public_path__ + \"static/media/error.a3714ff9.jpg\";","import React, { useState } from 'react';\nimport styles from './app.module.scss';\nimport { Grid, Drawer, Box, IconButton, Hidden } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport CodeIcon from '@material-ui/icons/Code';\nimport PeopleIcon from '@material-ui/icons/People';\nimport ComputerIcon from '@material-ui/icons/Computer';\nimport BuildIcon from '@material-ui/icons/Build';\nimport ProjectCard from './components/project-card/project-card';\nimport { projects } from './constants/project-config';\nimport ScrollToTop from \"react-scroll-to-top\";\n\n\nfunction App() {\n  const [menuOpen, setMenuOpen] = useState(false);\n\n  return (\n    <React.Fragment>\n      <Drawer anchor=\"right\" open={menuOpen} onClose={() => setMenuOpen(false)} classes={{ paper: styles.menuContent }}>\n        <Grid container>\n          <Grid item xs={12}>\n            <Box textAlign=\"right\">\n              <IconButton aria-label=\"close side menu\" onClick={() => setMenuOpen(false)} className={styles.menuCloseBtn}>\n                <CloseIcon fontSize=\"large\" />\n              </IconButton>\n            </Box>\n            <Box textAlign=\"center\" pt={3}>\n              <nav>\n                <ul>\n                  <li><a href=\"#competencies\">Competencies</a></li>\n                  <li><a href=\"#portfolio\">Portfolio</a></li>\n                  <li><a href=\"#about\">About</a></li>\n                </ul>\n              </nav>\n            </Box>\n          </Grid>\n        </Grid>\n      </Drawer>\n      <div className={`containerWrapper ${styles.app}`}>\n        <ScrollToTop smooth color=\"green\"/>\n        <Grid container>\n          <Grid item xs={12}>\n            <header className={styles.header}>\n              <Grid container justify=\"space-between\" alignItems=\"center\">\n                <Grid item>\n                  <h1>EK</h1>\n                </Grid>\n                <Hidden mdDown>\n                  <Grid item className={styles.navbarContent}>\n                    <nav>\n                      <ul>\n                        <li><a href=\"#competencies\">Competencies</a></li>\n                        <li><a href=\"#portfolio\">Portfolio</a></li>\n                        <li><a href=\"#about\">About</a></li>\n                      </ul>\n                    </nav>\n                  </Grid>\n                </Hidden>\n                <Hidden lgUp>\n                  <Grid item>\n                    <IconButton aria-label=\"menu\" className={styles.menuIcon} onClick={() => setMenuOpen(true)}>\n                      <MenuIcon fonstSize=\"large\" />\n                    </IconButton>\n                  </Grid>\n                </Hidden>\n              </Grid>\n            </header>\n          </Grid>\n          <Grid item xs={12} className={styles.intro}>\n            <div className={styles.introContent}>\n              <h1>EMMA KLEIN</h1>\n              <h3>Front End Developer & Team Lead</h3>\n              <Grid container justify=\"center\" alignItems=\"center\">\n                <Grid item className={styles.hireMe}>\n                    <a href=\"http://www.github.com/kleinemmac\" target=\"_blank\" rel=\"noreferrer noopener\"><GitHubIcon /></a>\n                </Grid>\n                <Grid item className={styles.hireMe}>\n                  <a href=\"http://www.linkedin.com/in/emma-klein46028a1a5\" target=\"_blank\" rel=\"noreferrer noopener\"><LinkedInIcon /></a>\n                </Grid>\n              </Grid>\n            </div>\n          </Grid>\n          <Grid item xs={12} className={styles.competencies} id=\"competencies\">\n            <h2>COMPETENCIES</h2>\n            <Grid container>\n              <Grid item xs={12} md={3}>\n                <ComputerIcon />\n                <h3>Tools of the Trade</h3>\n                <ul>\n                  <li>Agile/SCRUM practices</li>\n                  <li>Jira/Trello/Kanban</li>\n                  <li>Adobe XD/Photoshop</li>\n                  <li>Terminal/Git</li>\n                  <li>Management/Customer Service</li>\n                  <li>Technical Writing/Editing</li>\n                </ul>\n              </Grid>\n              <Grid item xs={12} md={3}>\n                <CodeIcon />\n                <h3>Programming Languages</h3>\n                <ul>\n                  <li>HTML</li>\n                  <li>CSS</li>\n                  <li>SASS</li>\n                  <li>Javascript/ES6+</li>\n                </ul>\n              </Grid>\n              <Grid item xs={12} md={3}>\n                <BuildIcon />\n                <h3>Frameworks and Libraries</h3>\n                <ul>\n                  <li>ReactJS/Redux/React Router</li>\n                  <li>VueJS/Vuex/Vue Router</li>\n                  <li>jQuery</li>\n                  <li>Material-UI/Vuetify</li>\n                  <li>Bootstrap</li>\n                </ul>\n              </Grid>\n              <Grid item xs={12} md={3}>\n                <PeopleIcon />\n                <h3>Soft Skills</h3>\n                <ul>\n                  <li>Collaboration</li>\n                  <li>Organization</li>\n                  <li>Leadership</li>\n                  <li>Empathy</li>\n                  <li>Creativity</li>\n                  <li>Critical Thinking</li>\n                  <li>Adaptability</li>\n                </ul>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item xs={12} className={styles.portfolio} id=\"portfolio\">\n            <h2>PORTFOLIO</h2>\n            <Grid container justify=\"center\" spacing={3} className={styles.cardContainer}>\n              { projects.map(project => {\n                  return (\n                    <Grid item xs={12} md={4} lg={3} key={project.title}>\n                      <ProjectCard project={project} />\n                    </Grid>\n                  )\n                })\n              }\n            </Grid>\n          </Grid>\n          <Grid item xs={12} className={styles.about} id=\"about\">\n            <h2>ABOUT ME</h2>\n            <p>\n            Shortly after sunrise one brisk winter morning, I found myself peeling a feral cat off of my face at my local animal shelter and \n            wondering if there were any career paths that involved slightly less blood loss and some bearable form of discomfort. Turns out \n            Frontend Development has almost a 0% rabies risk and it ended up being a good fit for me.\n            </p>\n            <p>\n              I am a Front End Developer currently serving as a Team Lead & Principal Front End Developer at Queen's Web. Rather than sticking \n              solely to Front End development, I have dedicated my time to gaining proficiency in other intricacies of web development in order \n              to hone my skills as a developer, problem solver, and leader.\n            </p>\n            <p>\n              I create clean, functional, responsive websites and applications and I am competent in Front End & UI/UX principles to the degree that \n              I can deliver high quality final products confidently.\n            </p>\n          </Grid>\n        </Grid>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}